
name: studio-nuxt-build
run-name: studio nuxt build

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Add write workflow permissions
permissions:
  contents: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build-and-deploy:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: docs

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [20]

    steps:
      - name: Checkout
        uses: actions/checkout@8edcb1bdb4e267140fa742c62e395cd74f332709

      - name: Identify package manager
        id: pkgman
        run: |
          cache=`[ -f "pnpm-lock.yaml" ] && echo "pnpm" || ([ -f "package-lock.json" ] && echo "npm" || ([ -f "yarn.lock" ] && echo "yarn" || echo ""))`
          package_manager=`[ ! -z "$cache" ] && echo "$cache" || echo "pnpm"`
          echo "cache=$cache" >> $GITHUB_OUTPUT
          echo "package_manager=$package_manager" >> $GITHUB_OUTPUT

      - uses: pnpm/action-setup@f2b2b233b538f500472c7274c7012f57857d8ce0
        if: ${{ steps.pkgman.outputs.package_manager == 'pnpm' }}
        name: Install pnpm
        id: pnpm-install

      - uses: actions/setup-node@5e2628c959b9ade56971c0afcebbe5332d44b398
        with:
          version: ${{ matrix.node }}
          cache: ${{ steps.pkgman.outputs.cache }}

      - name: Install dependencies
        run: ${{ steps.pkgman.outputs.package_manager }} install

      - name: Generate
        run: npx nuxi build --preset github_pages
        env:
          NUXT_PUBLIC_STUDIO_API_URL: https://api.nuxt.studio
          NUXT_UI_PRO_LICENSE: ${{ secrets.NUXT_UI_PRO_LICENSE }}
          NODE_OPTIONS: --max_old_space_size=8192

      # Deployment job
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@5faf170fee96090bac488007f5181f76944ed188
        with:
          folder: docs/dist
